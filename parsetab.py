
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSEQPARleftIFELSEWHILEleftEQUALleftLESSTHANGREATERTHANNOTEQUALleftPLUSMINUSleftTIMESDIVIDEleftANDORleftCHANAND ASPAS BOOLEAN CHAN COMMENT DIVIDE ELSE EQUAL ERR_STRING FALSE GREATEROREQUAL GREATERTHAN ID IF LBRACE LESSTHAN LESSTHANOREQUAL LPAREN MINUS NOTEQUAL NUMBER OR PAR PLUS RBRACE RPAREN SEQ STRING TIMES TRUE WHILEprograma_minipar : bloco_stmtbloco_stmt : bloco_SEQ\n                  | bloco_PAR\n                  | stmtsbloco_SEQ : SEQ stmtsbloco_PAR : PAR stmtsstmts : stmt\n             | stmts stmtstmt : atribuicaostmt : comparacaostmt : IF LPAREN BOOLEAN RPAREN LBRACE stmt RBRACE %prec IF\n            | IF LPAREN comparacao RPAREN LBRACE stmt RBRACE %prec IFstmt : IF LPAREN BOOLEAN RPAREN LBRACE single_stmt RBRACE ELSE LBRACE single_stmt RBRACE\n            | IF LPAREN comparacao RPAREN LBRACE single_stmt RBRACE ELSE LBRACE single_stmt RBRACEsingle_stmt : atribuicao\n                   | comparacaostmt : WHILE LPAREN BOOLEAN RPAREN LBRACE stmt RBRACE %prec WHILE\n            | WHILE LPAREN comparacao RPAREN LBRACE stmt RBRACE %prec WHILEatribuicao : ID EQUAL exprcomparacao : expr LESSTHAN expr\n                  | expr GREATERTHAN expr\n                  | expr NOTEQUAL exprexpr : c_channel\n            | ID\n            | NUMBER\n            | operacao\n            | BOOLEAN\n            | STRING\n            | LPAREN expr RPAREN\n            | LPAREN c_channel RPARENoperacao : adicao\n                | subtracao\n                | multiplicacao\n                | divisaoadicao : NUMBER PLUS NUMBER\n                | ID PLUS ID    \n                | ID PLUS NUMBERsubtracao : NUMBER MINUS NUMBERmultiplicacao : NUMBER TIMES NUMBERdivisao : NUMBER DIVIDE NUMBERc_channel : CHAN ID ":" ID "," ID'
    
_lr_action_items = {'SEQ':([0,],[6,]),'PAR':([0,],[7,]),'IF':([0,5,6,7,8,9,10,13,17,18,19,20,22,23,24,25,26,27,28,32,46,47,50,51,52,53,54,55,56,57,58,59,66,67,68,69,79,80,82,84,85,94,95,],[11,11,11,11,-7,-9,-10,-27,-23,-25,-26,-28,-31,-32,-33,-34,-8,11,11,-24,-29,-30,-19,-36,-37,-20,-21,-22,-35,-38,-39,-40,11,11,11,11,-41,-11,-12,-17,-18,-13,-14,]),'WHILE':([0,5,6,7,8,9,10,13,17,18,19,20,22,23,24,25,26,27,28,32,46,47,50,51,52,53,54,55,56,57,58,59,66,67,68,69,79,80,82,84,85,94,95,],[14,14,14,14,-7,-9,-10,-27,-23,-25,-26,-28,-31,-32,-33,-34,-8,14,14,-24,-29,-30,-19,-36,-37,-20,-21,-22,-35,-38,-39,-40,14,14,14,14,-41,-11,-12,-17,-18,-13,-14,]),'ID':([0,5,6,7,8,9,10,12,13,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,46,47,50,51,52,53,54,55,56,57,58,59,60,66,67,68,69,70,79,80,82,84,85,88,89,94,95,],[15,15,15,15,-7,-9,-10,32,-27,-23,-25,-26,-28,43,-31,-32,-33,-34,-8,15,15,32,-24,32,32,51,32,32,32,-29,-30,-19,-36,-37,-20,-21,-22,-35,-38,-39,-40,65,15,15,15,15,79,-41,-11,-12,-17,-18,15,15,-13,-14,]),'NUMBER':([0,5,6,7,8,9,10,12,13,17,18,19,20,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,46,47,50,51,52,53,54,55,56,57,58,59,66,67,68,69,79,80,82,84,85,88,89,94,95,],[18,18,18,18,-7,-9,-10,18,-27,-23,-25,-26,-28,-31,-32,-33,-34,-8,18,18,18,-24,18,18,52,18,18,18,56,57,58,59,-29,-30,-19,-36,-37,-20,-21,-22,-35,-38,-39,-40,18,18,18,18,-41,-11,-12,-17,-18,18,18,-13,-14,]),'BOOLEAN':([0,5,6,7,8,9,10,12,13,17,18,19,20,22,23,24,25,26,27,28,29,32,33,34,36,37,38,46,47,50,51,52,53,54,55,56,57,58,59,66,67,68,69,79,80,82,84,85,88,89,94,95,],[13,13,13,13,-7,-9,-10,13,-27,-23,-25,-26,-28,-31,-32,-33,-34,-8,13,13,44,-24,48,13,13,13,13,-29,-30,-19,-36,-37,-20,-21,-22,-35,-38,-39,-40,13,13,13,13,-41,-11,-12,-17,-18,13,13,-13,-14,]),'STRING':([0,5,6,7,8,9,10,12,13,17,18,19,20,22,23,24,25,26,27,28,29,32,33,34,36,37,38,46,47,50,51,52,53,54,55,56,57,58,59,66,67,68,69,79,80,82,84,85,88,89,94,95,],[20,20,20,20,-7,-9,-10,20,-27,-23,-25,-26,-28,-31,-32,-33,-34,-8,20,20,20,-24,20,20,20,20,20,-29,-30,-19,-36,-37,-20,-21,-22,-35,-38,-39,-40,20,20,20,20,-41,-11,-12,-17,-18,20,20,-13,-14,]),'LPAREN':([0,5,6,7,8,9,10,11,12,13,14,17,18,19,20,22,23,24,25,26,27,28,29,32,33,34,36,37,38,46,47,50,51,52,53,54,55,56,57,58,59,66,67,68,69,79,80,82,84,85,88,89,94,95,],[12,12,12,12,-7,-9,-10,29,12,-27,33,-23,-25,-26,-28,-31,-32,-33,-34,-8,12,12,12,-24,12,12,12,12,12,-29,-30,-19,-36,-37,-20,-21,-22,-35,-38,-39,-40,12,12,12,12,-41,-11,-12,-17,-18,12,12,-13,-14,]),'CHAN':([0,5,6,7,8,9,10,12,13,17,18,19,20,22,23,24,25,26,27,28,29,32,33,34,36,37,38,46,47,50,51,52,53,54,55,56,57,58,59,66,67,68,69,79,80,82,84,85,88,89,94,95,],[21,21,21,21,-7,-9,-10,21,-27,-23,-25,-26,-28,-31,-32,-33,-34,-8,21,21,21,-24,21,21,21,21,21,-29,-30,-19,-36,-37,-20,-21,-22,-35,-38,-39,-40,21,21,21,21,-41,-11,-12,-17,-18,21,21,-13,-14,]),'$end':([1,2,3,4,5,8,9,10,13,17,18,19,20,22,23,24,25,26,27,28,32,46,47,50,51,52,53,54,55,56,57,58,59,79,80,82,84,85,94,95,],[0,-1,-2,-3,-4,-7,-9,-10,-27,-23,-25,-26,-28,-31,-32,-33,-34,-8,-5,-6,-24,-29,-30,-19,-36,-37,-20,-21,-22,-35,-38,-39,-40,-41,-11,-12,-17,-18,-13,-14,]),'RBRACE':([9,10,13,17,18,19,20,22,23,24,25,32,46,47,50,51,52,53,54,55,56,57,58,59,71,72,73,74,75,76,77,78,79,80,82,84,85,90,91,92,93,94,95,],[-9,-10,-27,-23,-25,-26,-28,-31,-32,-33,-34,-24,-29,-30,-19,-36,-37,-20,-21,-22,-35,-38,-39,-40,80,81,-9,-10,82,83,84,85,-41,-11,-12,-17,-18,94,-15,-16,95,-13,-14,]),'LESSTHAN':([13,15,16,17,18,19,20,22,23,24,25,32,44,46,47,48,51,52,56,57,58,59,79,],[-27,-24,36,-23,-25,-26,-28,-31,-32,-33,-34,-24,-27,-29,-30,-27,-36,-37,-35,-38,-39,-40,-41,]),'GREATERTHAN':([13,15,16,17,18,19,20,22,23,24,25,32,44,46,47,48,51,52,56,57,58,59,79,],[-27,-24,37,-23,-25,-26,-28,-31,-32,-33,-34,-24,-27,-29,-30,-27,-36,-37,-35,-38,-39,-40,-41,]),'NOTEQUAL':([13,15,16,17,18,19,20,22,23,24,25,32,44,46,47,48,51,52,56,57,58,59,79,],[-27,-24,38,-23,-25,-26,-28,-31,-32,-33,-34,-24,-27,-29,-30,-27,-36,-37,-35,-38,-39,-40,-41,]),'RPAREN':([13,17,18,19,20,22,23,24,25,30,31,32,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,79,],[-27,-23,-25,-26,-28,-31,-32,-33,-34,46,47,-24,61,62,-29,-30,63,64,-36,-37,-20,-21,-22,-35,-38,-39,-40,-41,]),'EQUAL':([15,],[34,]),'PLUS':([15,18,32,],[35,39,35,]),'MINUS':([18,],[40,]),'TIMES':([18,],[41,]),'DIVIDE':([18,],[42,]),':':([43,],[60,]),'LBRACE':([61,62,63,64,86,87,],[66,67,68,69,88,89,]),',':([65,],[70,]),'ELSE':([81,83,],[86,87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa_minipar':([0,],[1,]),'bloco_stmt':([0,],[2,]),'bloco_SEQ':([0,],[3,]),'bloco_PAR':([0,],[4,]),'stmts':([0,6,7,],[5,27,28,]),'stmt':([0,5,6,7,27,28,66,67,68,69,],[8,26,8,8,26,26,71,75,77,78,]),'atribuicao':([0,5,6,7,27,28,66,67,68,69,88,89,],[9,9,9,9,9,9,73,73,9,9,91,91,]),'comparacao':([0,5,6,7,27,28,29,33,66,67,68,69,88,89,],[10,10,10,10,10,10,45,49,74,74,10,10,92,92,]),'expr':([0,5,6,7,12,27,28,29,33,34,36,37,38,66,67,68,69,88,89,],[16,16,16,16,30,16,16,16,16,50,53,54,55,16,16,16,16,16,16,]),'c_channel':([0,5,6,7,12,27,28,29,33,34,36,37,38,66,67,68,69,88,89,],[17,17,17,17,31,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'operacao':([0,5,6,7,12,27,28,29,33,34,36,37,38,66,67,68,69,88,89,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'adicao':([0,5,6,7,12,27,28,29,33,34,36,37,38,66,67,68,69,88,89,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'subtracao':([0,5,6,7,12,27,28,29,33,34,36,37,38,66,67,68,69,88,89,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'multiplicacao':([0,5,6,7,12,27,28,29,33,34,36,37,38,66,67,68,69,88,89,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'divisao':([0,5,6,7,12,27,28,29,33,34,36,37,38,66,67,68,69,88,89,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'single_stmt':([66,67,88,89,],[72,76,90,93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa_minipar","S'",1,None,None,None),
  ('programa_minipar -> bloco_stmt','programa_minipar',1,'p_programa_minipar','synth.py',20),
  ('bloco_stmt -> bloco_SEQ','bloco_stmt',1,'p_bloco_stmt','synth.py',25),
  ('bloco_stmt -> bloco_PAR','bloco_stmt',1,'p_bloco_stmt','synth.py',26),
  ('bloco_stmt -> stmts','bloco_stmt',1,'p_bloco_stmt','synth.py',27),
  ('bloco_SEQ -> SEQ stmts','bloco_SEQ',2,'p_bloco_SEQ','synth.py',31),
  ('bloco_PAR -> PAR stmts','bloco_PAR',2,'p_bloco_PAR','synth.py',35),
  ('stmts -> stmt','stmts',1,'p_stmts','synth.py',38),
  ('stmts -> stmts stmt','stmts',2,'p_stmts','synth.py',39),
  ('stmt -> atribuicao','stmt',1,'p_stmt_atribuicao','synth.py',43),
  ('stmt -> comparacao','stmt',1,'p_stmt_comparacao','synth.py',47),
  ('stmt -> IF LPAREN BOOLEAN RPAREN LBRACE stmt RBRACE','stmt',7,'p_stmt_if','synth.py',50),
  ('stmt -> IF LPAREN comparacao RPAREN LBRACE stmt RBRACE','stmt',7,'p_stmt_if','synth.py',51),
  ('stmt -> IF LPAREN BOOLEAN RPAREN LBRACE single_stmt RBRACE ELSE LBRACE single_stmt RBRACE','stmt',11,'p_stmt_if_else','synth.py',57),
  ('stmt -> IF LPAREN comparacao RPAREN LBRACE single_stmt RBRACE ELSE LBRACE single_stmt RBRACE','stmt',11,'p_stmt_if_else','synth.py',58),
  ('single_stmt -> atribuicao','single_stmt',1,'p_single_stmt','synth.py',65),
  ('single_stmt -> comparacao','single_stmt',1,'p_single_stmt','synth.py',66),
  ('stmt -> WHILE LPAREN BOOLEAN RPAREN LBRACE stmt RBRACE','stmt',7,'p_stmt_while','synth.py',70),
  ('stmt -> WHILE LPAREN comparacao RPAREN LBRACE stmt RBRACE','stmt',7,'p_stmt_while','synth.py',71),
  ('atribuicao -> ID EQUAL expr','atribuicao',3,'p_atribuicao','synth.py',76),
  ('comparacao -> expr LESSTHAN expr','comparacao',3,'p_comparacao','synth.py',81),
  ('comparacao -> expr GREATERTHAN expr','comparacao',3,'p_comparacao','synth.py',82),
  ('comparacao -> expr NOTEQUAL expr','comparacao',3,'p_comparacao','synth.py',83),
  ('expr -> c_channel','expr',1,'p_expr','synth.py',86),
  ('expr -> ID','expr',1,'p_expr','synth.py',87),
  ('expr -> NUMBER','expr',1,'p_expr','synth.py',88),
  ('expr -> operacao','expr',1,'p_expr','synth.py',89),
  ('expr -> BOOLEAN','expr',1,'p_expr','synth.py',90),
  ('expr -> STRING','expr',1,'p_expr','synth.py',91),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','synth.py',92),
  ('expr -> LPAREN c_channel RPAREN','expr',3,'p_expr','synth.py',93),
  ('operacao -> adicao','operacao',1,'p_operacao','synth.py',97),
  ('operacao -> subtracao','operacao',1,'p_operacao','synth.py',98),
  ('operacao -> multiplicacao','operacao',1,'p_operacao','synth.py',99),
  ('operacao -> divisao','operacao',1,'p_operacao','synth.py',100),
  ('adicao -> NUMBER PLUS NUMBER','adicao',3,'p_adicao','synth.py',104),
  ('adicao -> ID PLUS ID','adicao',3,'p_adicao','synth.py',105),
  ('adicao -> ID PLUS NUMBER','adicao',3,'p_adicao','synth.py',106),
  ('subtracao -> NUMBER MINUS NUMBER','subtracao',3,'p_subtracao','synth.py',110),
  ('multiplicacao -> NUMBER TIMES NUMBER','multiplicacao',3,'p_multiplicacao','synth.py',114),
  ('divisao -> NUMBER DIVIDE NUMBER','divisao',3,'p_divisao','synth.py',118),
  ('c_channel -> CHAN ID : ID , ID','c_channel',6,'p_c_channel','synth.py',122),
]
